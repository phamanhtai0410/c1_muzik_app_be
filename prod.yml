services:
  db:
    image: postgres:14.0
    restart: unless-stopped
    command: postgres -c 'max_connections=500'
    env_file:
      - ./.env
    volumes:
      - ./.docker/postgres-data:/var/lib/postgresql/data
    networks:
      nft-net:
  web: &web
    build:
      context: .
      dockerfile: compose/prod/Dockerfile
    env_file:
      - ./.env
    ports:
      - "${DOCKER_EXPOSE_PORT?8000}:8000"
    volumes:
      - ./src/:/code/src/
      - ./static/:/code/static/
      - ./logs:/code/logs/
    command: /start
    restart: unless-stopped
    depends_on:
      - db
      - redis
    networks:
      nft-net:
  scanner:
    <<: *web
    depends_on:
      - redis
    volumes:
      - ./logs:/code/logs/
    command: /start-scanner
    ports: []
  ipfs:
    image: ipfs/go-ipfs:v0.11.0
    ports:
      - 127.0.0.1:4001:4001/tcp
      - 127.0.0.1:4001:4001/udp
      - 127.0.0.1:5001:5001
      - 127.0.0.1:8080:8080
    volumes:
      - ./.docker/ipfs:/data/ipfs
    environment:
      - IPFS_PATH=/data/ipfs
    restart: unless-stopped
    networks:
       nft-net:
  redis:
    image: redis:5.0
    restart: unless-stopped
    volumes:
      - ./.docker/redis-data:/data
    networks:
      nft-net:
  celery:
    <<: *web
    image: celery:3.1
    command: /start-celery
    depends_on:
      - redis
    volumes:
      - ./logs:/code/logs/
    ports: []
  celery_beat:
    <<: *web
    image: celery:3.1
    command: /start-celerybeat
    depends_on:
      - redis
    ports: []
  bot:
    <<: *web
    command: python start_bot_polling.py
    ports: []
  websockets:
    <<: *web
    depends_on:
      - db
      - redis
      - web
    command: /start-websockets
    ports:
      - "${DOCKER_WS_EXPOSE_PORT?8001}:8001"
networks:
  nft-net:
